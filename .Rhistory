knitr::opts_chunk$set(echo = TRUE)
library(readr)
venta <- read_csv("Consulta_Ventas_de_Gas_Natural_Comprimido_Vehicular__AUTOMATIZADO__20250316.csv")
View(venta)
knitr::opts_chunk$set(echo = TRUE)
# Cargar paquetes necesarios
library(tidyverse)  # Para manipulación de datos
library(skimr)      # Para resumen detallado
# Cargar los datos (ajusta la ruta según corresponda)
datos <- read.csv("Consulta_Ventas_de_Gas_Natural_Comprimido_Vehicular__AUTOMATIZADO__20250316.csv")
# Ver las primeras filas
head(datos)
# Resumen estadístico general
summary(datos)
# Resumen más detallado con skimr
skim(datos)
View(datos)
unique(datos$DEPARTAMENTO)
library(readxl)
library(dplyr)
library(tidyverse)
library(lubridate)
library(ggplot2)
library(scales)
library(gridExtra)
library(tsibble)
# Importar solo la hoja 2, y omitir las dos primeras filas (vacías).
df <- read_excel("inflacion.xlsx", sheet = 2, skip = 2)
# Dar el formato correcto a las fechas.
colnames(df)[1] <- "Fecha"
df <- df[-c(1, nrow(df) ), ]
df$Fecha <- as.numeric(df$Fecha)
df$Fecha <- as.Date(df$Fecha, origin = "1899-12-30")
# Eliminar los espacios en los nombres de las columnas.
colnames(df) <- gsub("\u00A0", "_", colnames(df))
# Seleccionar las columnas de interés.
df <- df %>% select(Fecha, IPC_Barranquilla, IPC_Bogotá, IPC_Bucaramanga, IPC_Cali, IPC_Manizales, IPC_Medellín, IPC_Pasto)
head(df)
summary(df)
sum(is.na(df))
# Convertir a formato largo para facilitar la visualización
ipc_long <- df %>%
pivot_longer(
cols = starts_with("IPC_"),
names_to = "Ciudad",
values_to = "IPC"
) %>%
mutate(Ciudad = gsub("IPC_", "", Ciudad))
head(ipc_long, n=7)
# Gráfico de series temporales para todas las ciudades
ggplot(ipc_long, aes(x = Fecha, y = IPC, color = Ciudad)) +
geom_line() +
scale_color_brewer(palette = "Set1") +
labs(title = "Evolución del IPC en ciudades colombianas (1979-2025)",
x = "Año",
y = "IPC") +
theme_minimal() +
scale_x_date(date_breaks = "5 years", date_labels = "%Y") +
theme(legend.position = "bottom")
# Calcular la fecha de hace 10 años desde la última fecha en el dataset
ultima_fecha <- max(ipc_long$Fecha)
fecha_inicio <- ultima_fecha - years(10)
# Filtrar los datos para los últimos 10 años
ipc_10_anos <- ipc_long %>%
filter(Fecha >= fecha_inicio)
# Crear el gráfico con los datos filtrados
ggplot(ipc_10_anos, aes(x = Fecha, y = IPC, color = Ciudad)) +
geom_line(linewidth=1) +
scale_color_brewer(palette = "Set1") +
labs(title = "Evolución del IPC en ciudades colombianas (últimos 10 años)",
x = "Año",
y = "IPC") +
theme_minimal() +
scale_x_date(date_breaks = "1 year", date_labels = "%Y") +
theme(legend.position = "bottom")
# Cálculo de tasas de inflación anual
ipc_inflation <- ipc_long %>%
arrange(Ciudad, Fecha) %>%
group_by(Ciudad) %>%
mutate(
Inflacion_Anual = (IPC / lag(IPC, 12) - 1) * 100
) %>%
filter(!is.na(Inflacion_Anual))
# Gráfico de inflación anual
ggplot(ipc_inflation, aes(x = Fecha, y = Inflacion_Anual, color = Ciudad)) +
geom_line() +
scale_color_brewer(palette = "Set1") +
labs(title = "Inflación anual en ciudades colombianas (1980-2015)",
x = "Año",
y = "Tasa de inflación (%)") +
theme_minimal() +
scale_x_date(date_breaks = "5 years", date_labels = "%Y") +
theme(legend.position = "bottom")
# Filtrar los datos para los últimos 10 años
ipc_10_anos <- ipc_inflation %>%
filter(Fecha >= fecha_inicio)
# Crear el gráfico con los datos filtrados
ggplot(ipc_10_anos, aes(x = Fecha, y = Inflacion_Anual, color = Ciudad)) +
geom_line(linewidth=1) +
scale_color_brewer(palette = "Set1") +
labs(title = "Evolución de la inflación en ciudades colombianas (últimos 10 años)",
x = "Año",
y = "Inflación") +
theme_minimal() +
scale_x_date(date_breaks = "1 year", date_labels = "%Y") +
theme(legend.position = "bottom")
# Boxplots de inflación por ciudad
ggplot(ipc_inflation, aes(x = Ciudad, y = Inflacion_Anual, fill = Ciudad)) +
geom_boxplot() +
scale_color_brewer(palette = "Set1") +
labs(title = "Distribución de la inflación anual por ciudad (1980-2015)",
x = "Ciudad",
y = "Tasa de inflación (%)") +
theme_minimal() +
theme(legend.position = "none") +
coord_flip()
View(df)
View(ipc_10_anos)
View(ipc_inflation)
View(ipc_10_anos)
View(ipc_long)
View(ipc_inflation)
# Cálculo de tasas de inflación anual
ipc_inflation <- ipc_long %>%
arrange(Ciudad, Fecha) %>%
group_by(Ciudad) %>%
mutate(
Inflacion_Anual = (IPC / lag(IPC, 12) - 1) * 100
) %>%
filter(!is.na(Inflacion_Anual))
# Guardar el dataframe limpio para usarlo en Python
write_xlsx(ipc_inflacion, "inflacion_procesada.xlsx")
# Cálculo de tasas de inflación anual
ipc_inflation <- ipc_long %>%
arrange(Ciudad, Fecha) %>%
group_by(Ciudad) %>%
mutate(
Inflacion_Anual = (IPC / lag(IPC, 12) - 1) * 100
) %>%
filter(!is.na(Inflacion_Anual))
# Guardar el dataframe limpio para usarlo en Python
write_xlsx(ipc_inflation, "inflacion_procesada.xlsx")
library(readxl)
library(dplyr)
library(tidyverse)
library(lubridate)
library(ggplot2)
library(scales)
library(gridExtra)
library(tsibble)
library(writexl)
# Importar solo la hoja 2, y omitir las dos primeras filas (vacías).
df <- read_excel("inflacion.xlsx", sheet = 2, skip = 2)
# Cálculo de tasas de inflación anual
ipc_inflation <- ipc_long %>%
arrange(Ciudad, Fecha) %>%
group_by(Ciudad) %>%
mutate(
Inflacion_Anual = (IPC / lag(IPC, 12) - 1) * 100
) %>%
filter(!is.na(Inflacion_Anual))
# Guardar el dataframe limpio para usarlo en Python
write_xlsx(ipc_inflation, "inflacion_procesada.xlsx")
# Gráfico de inflación anual
ggplot(ipc_inflation, aes(x = Fecha, y = Inflacion_Anual, color = Ciudad)) +
geom_line() +
scale_color_brewer(palette = "Set1") +
labs(title = "Inflación anual en ciudades colombianas (1980-2015)",
x = "Año",
y = "Tasa de inflación (%)") +
theme_minimal() +
scale_x_date(date_breaks = "5 years", date_labels = "%Y") +
theme(legend.position = "bottom")
